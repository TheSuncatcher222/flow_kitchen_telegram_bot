# INFO
# - Комменарии в тексте ставятся как: "# INFO. Тут такая-та важная штука"
# - Задачи на будущее ставятся как: "# TODO. Сделать такую-то штуку"
# - Не забывай смотреть обновления с сервера (git pull)
# - Комментарии ставятся как "verb something" ("Add smth / Delete smth / Refactor smth")
#   На самом деле, все сложнее, в симантическом версионировании и паттернах коммитов,
#   но упарываться не надо
# - Выполненые задачи - удаляй :)


# СТРУКТУРА И МОДУЛИ ПРОЕКТА

- pre-commit:
    - добавить в venv библиотеку "pre-commit"
    - запустить "pre-commit install --install-hooks"
    - зафиксировать в зависимостях проекта
- проверить в pip версию программ и в requirements.txt прописать конкретные версии для всего, что установлено
- удалить папку .vs из git и сделать так, чтобы она там больше никогда не оказалась

# 3) Общее
- сделать импорт данных из файла .json (пример данных в корне проекта)

# 4) Telegram bot
- при отправке боту команды "/start/" бот должен приветствовать пользователя, предоставлять ссылку на группу ВК и краткой вводной информацией. ВАЖНО: сделать условно, текст пришлет Шеф
- при отправке любой команды бот должен сообщить, что такой команды он не знает
- при отправке любого текста, он должен пересылать текст Шефу в телеграм, а пользователю писать, "Я обязательно передам сообщение Шефу, и он вам ответит". Важно, Шеф должен получить сообщение формата "Вам /ссылка тг/ написал текст: \n /текст/"
- при отправке опроса в чат бот должен отписываться в режиме дебага также в чат разработчиков с информацией о действиях. (ПОДСКАЗКА: режим дебага можно указать как `if DEBUG: ...`, где DEBUG прописан в .env файле)
